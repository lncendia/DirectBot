// <auto-generated />
using System;
using DirectBot.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DirectBot.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DirectBot.DAL.Models.Instagram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ChallengeLoginInfo")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ProxyId")
                        .HasColumnType("int");

                    b.Property<string>("StateData")
                        .HasColumnType("longtext");

                    b.Property<string>("TwoFactorLoginInfo")
                        .HasColumnType("longtext");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProxyId");

                    b.HasIndex("UserId");

                    b.ToTable("Instagrams");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Proxy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proxies");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndSubscribe")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("UserId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Subscribes");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountErrors")
                        .HasColumnType("int");

                    b.Property<int>("CountSuccess")
                        .HasColumnType("int");

                    b.Property<int>("CountUsers")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("longtext");

                    b.Property<string>("FileIdentifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Hashtag")
                        .HasColumnType("longtext");

                    b.Property<int>("InstagramId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSucceeded")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("JobId")
                        .HasColumnType("longtext");

                    b.Property<int>("LowerInterval")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UpperInterval")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstagramId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Instagram", b =>
                {
                    b.HasOne("DirectBot.DAL.Models.Proxy", "Proxy")
                        .WithMany("Instagrams")
                        .HasForeignKey("ProxyId");

                    b.HasOne("DirectBot.DAL.Models.User", "User")
                        .WithMany("Instagrams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proxy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Payment", b =>
                {
                    b.HasOne("DirectBot.DAL.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Subscribe", b =>
                {
                    b.HasOne("DirectBot.DAL.Models.User", "User")
                        .WithMany("Subscribes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Work", b =>
                {
                    b.HasOne("DirectBot.DAL.Models.Instagram", "Instagram")
                        .WithMany("Works")
                        .HasForeignKey("InstagramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instagram");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Instagram", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.Proxy", b =>
                {
                    b.Navigation("Instagrams");
                });

            modelBuilder.Entity("DirectBot.DAL.Models.User", b =>
                {
                    b.Navigation("Instagrams");

                    b.Navigation("Payments");

                    b.Navigation("Subscribes");
                });
#pragma warning restore 612, 618
        }
    }
}
